<!DOCTYPE html>
<!--[if lt IE 7]>  <html class="ie ie6 lte9 lte8 lte7"> <![endif]-->
<!--[if IE 7]>     <html class="ie ie7 lte9 lte8 lte7"> <![endif]-->
<!--[if IE 8]>     <html class="ie ie8 lte9 lte8"> <![endif]-->
<!--[if IE 9]>     <html class="ie ie9 lte9"> <![endif]-->
<!--[if gt IE 9]>  <html> <![endif]-->
<!--[if !IE]><!--> <html>             <!--<![endif]-->

<!--

	-- NOTES ------------------------------------------------------------------------------

	This isn't only a page with my CV, but also a place where I'll refine the code to test 
	the concepts of NTE (https://github.com/zonafets/NTE)

	Note: I know, this is not the better code. DRY principle can be applied more.

	-- CHANGELOG --------------------------------------------------------------------------

	180611\s.zaglio: begin of apply of DRY & NTE principles to the code; added message
	180608\s.zaglio: added self-taught experience; improved links replace with "&"
	180601\s.zaglio: added todo section
	180530\s.zaglio: first semi-definitive version

	-- TODO -------------------------------------------------------------------------------

	180611\s.zaglio: apply Brian W. Kernighan and P. J. Plaugher principle
	180601\s.zaglio: apply DRY principle to code and convert to NTE

-->

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <!--meta name="viewport" content="initial-scale=1, maximum-scale=1"/-->
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta http-equiv="cache-control" content="no-store"/>
    <meta name="keywords" content="analista, programmatore, sistemista, itc, it, manager, pc, as400, castiglione delle stiviere, mantova, brescia, asp, net, razor, mvc, delphi, c/c++, c#, wince, windows, msaccess, tsql, visual, basic, novell, windows, ubuntu, linux"/>
    <meta name="description" content="Curriculum di Stefano Zaglio"/>
    <link rel="icon" href="favicon.ico"/>
    <title>Curriculum di Stefano Zaglio</title>
    
    <style>

    	@-ms-viewport { width: device-width; }

        lg {
            background: #DDD;                
        }

        thead * {
            color: #FFF;
            background-color: darkgray;
            font-weight: bold;
            text-align: left;
        }
        
        section {
            margin-bottom: 10px;
            font-size: small;
        }
        
        section h2 {
            margin-bottom: 0;
            margin-top: 0;
            font-size: small;
            font-weight: bold;
            background: darkgray;
            color: white;
            padding-left: 1;
        }

        table {
            width: 100%;
            border-spacing: 0;
            border-collapse: collapse;
            margin-top: 0px;
            margin-left: 0px;
            margin-bottom: 10px;
            margin-right: 0px;
            border-spacing: 10px;
            padding: 5;
        }

        td {
        	padding: 0px 2px 0px 2px;
        	vertical-align: middle;
        }
        
        * {
            font-size: small;
            font-family: Tahoma;
        }

    	body {
        	margin:4px;
        	background-color:#ffffff;
        	color:#000000;
	    	opacity: 0;
		    transition: none;
    	}

		body.fade-in {
		    opacity: 1;
		    transition: 0.6s opacity;
		}
        
        :link {
            color: #663399 !important;
            text-decoration: none;
        }
        
        :visited {
            color: #999933 !important;
            text-decoration: none;
        }
        
        :active {
            color: #999933 !important;
            text-decoration: none;
        }
        
        tr {
            vertical-align: top;
        }
        
        ul,li {
            margin: 0;
            padding: 0;
        }

        ul {
            display: table;
        }

        li {
            list-style: none;
            display: table-row;
            line-height: 1.3em;
        }

        li::before {
            content: "‚óè";
            display: table-cell;
            text-align: right;
            padding-right: .3em;
            padding-left: .3em;
        }

        #self-nomination {
            text-align: left;
            font-size: medium;
        }

        #placeE {
        	cursor: pointer;
    		margin-left: 1;
    		width: 40ch;
        }
        
        #previous-kb td + td + td, #experiences td + td + td,
        #lasts-kb td + td, #head td + td {
        	text-align: right;
        }

        #previous-kb td + td + td {
        	width: 10%;
        }

        @media (min-width: 321px) {
	        #lasts-kb td + td 			{ width:fit-content; }
	        
	        #previous-kb td 			{ width: 20%; }
	        #previous-kb td + td 		{ width: 64%; }

	        #experiences td 			{ width: 20%;}
	        #experiences td + td		{ width: 60%;}
	        #experiences td + td + td	{ width: 20%; text-align: right; }
		}

        #privacy { border-top: 1px solid gray; }
        #privacy td + td { text-align: right; }

        #competencies-idx img, #projects img { width: 2ch; vertical-align: middle; padding: 2px; }
        #competencies-idx span { display: inline-block; margin: 0 2px 0 2px; }

        #projects tbody tr { border-bottom: 1px solid lightgray; }
        #projects td + td { text-align: center; }

        #experiences tbody tr { border-bottom: 1px solid lightgray; }

		#extra-courses tbody tr { border-bottom: 1px solid lightgray; }

		.flip-container, .from, .back {
		    position: absolute;
    		top: 4px;
    		right: 4px;
    	}

		@media (min-width: 361px) {
			#foto-barba,#foto-cravatta {
				width:104px;
				height:102px;
			}
			.flip-container, .front, .back {
				width: 104px;
				height: 102px;
			}
		}

		@media (max-width: 360px) {
			#foto-barba,#foto-cravatta {
				width:64px;
				height:63px;
			}
			.flip-container, .front, .back {
				width: 64px;
				height: 63px;
			}
		}

		/******************************
		 *  filp animation for photo  *
		 ******************************/

        /* entire container, keeps perspective */
		.flip-container {
			perspective: 1000px;
			display: inline-table;
		}

		.flip-container.flip .flipper {
			transform: rotateY(180deg);
		}

		/* avoid wrong print of front image */
		.flip-container.flip .flipper .front {
			visibility:hidden;
			transition: 1s;
		}

		/* flip speed goes here */
		.flipper {
			position: relative;
			transform-style: preserve-3d;
		}

		@media screen {
			.flipper {
				transition: transform 0.6s;
		}
	}

		/* hide back of pane during swap */
		.front, .back {
			backface-visibility: hidden;
			position: absolute;
			top: 0;
			left: 0;
			background-size: contain;
		}

		/* front pane, placed above back */
		.front {
			z-index: 2;
			/*background-image: url("images/io/foto-cravatta-tonda.jpg");*/
			/* for firefox 31 */
			transform: rotateY(0deg);
		}

		/* back, initially hidden pane */
		.back {
			/*background-image: url("images/io/foto-tonda.jpg");*/
			transform: rotateY(180deg);
		}

		.vertical.flip-container {
			position: relative;
		}

		.vertical .back {
			transform: rotateX(180deg);
		}

		.vertical.flip-container .flipper {
			transform-origin: 100% 51px; /* half of height */
		}

		.vertical.flip-container:hover .flipper {
			transform: rotateX(-180deg);
		}

		/****************************************************************
		 *  slider animation for views experiencies/projects animation  *
		 ****************************************************************/

		.slider {
			max-height: 0;
    		overflow: hidden;
		}

		@media screen {
			.slider {
	    		transition: max-height 1s ease-in-out;
			}
		}

		.slider.opened {
			max-height: 1000ch;
		}

		/****************
		 * nice tooltip *
		 ****************/

		.tip {
   			display: inline;
    		position: relative;
		}
		
		.tip:hover:after{
    		background: #333;
    		background: rgba(0,0,0,.8);
    		border-radius: 5px;
    		bottom: 26px;
    		color: #fff;
    		content: attr(title);
    		left: -200%;
    		padding: 5px 15px;
    		position: absolute;
    		z-index: 98;
		}
		
		.tip:hover:before{
    		border: solid;
    		border-color: #333 transparent;
    		border-width: 6px 6px 0 6px;
    		bottom: 20px;
    		content: "";
    		left: 10%;
    		position: absolute;
    		z-index: 99;
		}

    </style>
    <!--script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script-->
    <!--script src="https://mrrio.github.io/jsPDF/dist/jspdf.debug.js"></script-->
    <!--script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script-->
</head>
    
<body>
    
    <table id="head" class="anonymouse" >
        <tbody>
            <tr>
                <td>
                    <b>Stefano Zaglio</b>(CV)<br>
                    <span>Via Soratino, 8</span><br/>
                    46043 [Castiglione D/S] (Italy)<br>
                    Nato il 01.02.72 / Sposato
                </td>
                <td rowspan="2">
                	<div class="flip-container" click="flip">
						<div class="flipper">
							<div class="front">
								<img id="foto-cravatta" src="images/io/foto-cravatta-tonda.jpg" >
							</div>
							<div class="back">
								<img id="foto-barba" src="images/io/foto-tonda.jpg" >
							</div>
						</div>
					</div>
                </td>
            </tr>
            <tr>
                <td style="border-bottom: 1px solid gray;">
                    <img id="placeE" alt="myEmail" title="click to get email into clipboard" src="images/ref.svg" click="copyEmail2Clipboard"/><br>
                    this:&nbsp;[https://goo.gl/7hakDJ]
                    &nbsp;-&nbsp;[PDF]-&nbsp;[linkedin]
                </td>
            </tr>
        </tbody>
    </table>

    <blockquote id="self-nomination"></blockquote>

    <section id="briefly">
	    <h2>Brevemente</h2>
	    <ul>
	    </ul>
    </section>

    <div id="view_by_projects" class="slider">
    
        <section id="stacks-idx">
            <h2>Indice stacks</h2>
        </section>

        <section id="competencies-idx">
            <h2>Indice competenze</h2>
        </section>

        <table id="projects">
            <thead>
                <tr>
                    <td>Progetti e attivit√† principali</td>
                    <td>Stack</td>
                    <td>Comp.</td>
                    <td>Az.</td>
                </tr>
            </thead>
        </table>

        <section id="companies-idx">
            <h2>Indice aziende</h2>
        </section>

    </div>

    <div id="view_by_experiences" class="slider opened">

	    <table id="lasts-kb">
	        <thead>
	            <tr>
	                <td>Conoscenze recenti</td>
	                <td>Anni</td>
	            </tr>
	        </thead>
	    </table>

        <section id="experiences">
            <b>[Esperienze di Lavoro]&nbsp;(f/p.time, co.co.pro, p.o.)</b>
            <table>
                <thead>
                    <tr>
                        <td>Periodo/Comp.</td>
                        <td>Attivit√†</td>
                        <td>Azienda</td>
                    </tr>
                </thead>
            </table>
        </section>

		<section id="previous-kb">
	    <b>Conoscenze pregresse</b>
	    <table>
	        <thead>
	            <tr>
	                <td>Categoria</td>
	                <td>Nome</td>
	                <td>Anni</td>
	            </tr>
	        </thead>
	    </table>
		</section>

    </div>
        
    <section id="extra-info">
    	<h2>Informazioni aggiuntive</h2>
		<table>
		</table>
	</section>

	<table id="extra-courses">
	    <thead>
	        <tr>
	            <td>[Attivit√† extracurriculari]</td>
	            <td>Competenze acquisite</td>
	        </tr>
	    </thead>
	</table>

	<table id="privacy">
	    <tbody>
	        <tr>
	            <td><i>Autorizzo il trattamento dei dati personali ai sensi del &nbsp;ex D. lgs. 196/2003</i></td>
	            <td><i>Castiglione D/S, 24/05/2018</i></td>
	        </tr>
	    </tbody>
	</table>

	<!-- the following is the first draft for NTE implementation -->

	<notifyBar></notifyBar>

	<template name="notifyBar">
		<style>
			.fullPageOverlay > * {
				transition: all 1s ease-in-out;
			}

			.fullPageOverlay {
			    height:100%;
			    width:100%;
			    position:fixed;
			    left:0;
			    top:0;
			    z-index:100 !important;
			    background-color: rgba(0,0,0,0.5);
			    display: none;
            	cursor: pointer;
			}

			.fullPageOverlay .message {
				display: inline-block;
			    position: absolute;
			    left: 0;
			    right: 0;
			    margin: auto;
			    color: white;
			    height: fit-content;
			    top: 20%;
			    text-align: center;
			    background: slategray;
			}

			.fullPageOverlay .message p {
			    font-weight: bold;
			    font-size: 125%;
			    padding: 5%;
			}
		</style>

		<div class="fullPageOverlay" click="message">
		    <span class="message">
		    	<p></p>
		    </span>
		</div>

	</template>

</body>

<script src="cv.js"></script>

<script>

	var app = new (function() {

		var self = this

		var tag,tbody,parent,tr,td,tn

		
		// prototypes

		String.prototype.replaceAll = function(search, replacement) {
		    var target = this;
		    return target.replace(new RegExp(search.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), 'g'), replacement);
		};


		// generic utilities

		function getStyle(className) {
		    var classes = document.styleSheets[0].rules || document.styleSheets[0].cssRules;
		    for (var x = 0; x < classes.length; x++) {
		        if (classes[x].selectorText == className) {
		            return classes[x].style;
		        }
		    }
		}

		function competence_dsc(id) {
			var dsc = ""
			cv.competencies.some(
				function(it) {
					var b = (it[0] === id)
					if (b) dsc = it[1]
					return b
				}
			)
			return dsc
		}

		function message(textOrClickEvent) {
			var bar = document.getElementById("notifyBar")
			if (typeof textOrClickEvent === "string") {
				var msg = bar.firstElementChild.firstElementChild // span.p
				msg.innerText = textOrClickEvent
				bar.style.display = "block"
			} else
				bar.style.display = "none"
		}


		// behaviours

		function swapViews() {
			var flipper = document.querySelector(".flip-container")
			var experience_view = document.getElementById("view_by_experiences")
			var projects_view = document.getElementById("view_by_projects")
			var style = getStyle(".slider")
			var time = parseInt(style.transitionDuration) * 1000
			var css = "opened"

			if (flipper.classList.contains("flip")) {
				experience_view.classList.remove(css)
				setTimeout(function(){projects_view.classList.add(css)}, time)
			} else {
				projects_view.classList.remove(css)
				setTimeout(function(){experience_view.classList.add(css)}, time)
			}
		}

		function flip(ev) {
			var target = ev?ev.currentTarget:null
			var photo = document.querySelector(".flip-container")
			if (target === photo) {
				target.classList.toggle('flip')
				swapViews()
			}
			else
				photo.click()
		}

	    function copyEmail2Clipboard() {
	        document.oncopy = function(event) {
	            var a = ["z", "a", "g", "l", "i", "o", ".", "s", "t", "e", "f", "a", "n", "o", "@", "g", "m", "a", "i", "l", ".", "c", "o", "m"]
	            event.clipboardData.setData("Text", a.join(''));
	            event.preventDefault();
	        }
	        ;
	        document.execCommand("Copy");
	        document.oncopy = undefined;
	        message("Email copiata nella clipboard.")
	    }


	    // DOM helpers

	    function elem(id) {
	    	return document.getElementById(id)
	    }

	    function append( parent, node ) {
	    	parent.appendChild(node)
	    	return parent
	    }

	    function spcIf(condition) {
	    	return condition? " ":""
	    }

	    function txt(text) {
	    	return document.createTextNode(text)
	    }

	    function bold(nodeOrText) {
	    	var b = document.createElement("b")
	    	if (typeof nodeOrText === "string") {
	    		nodeOrText = document.createTextNode( nodeOrText )
	    	}
	    	b.appendChild(nodeOrText)
	    	return b
	    }

	    function lnk( href, node ) {
			var a = document.createElement("a")
			a.href = href
			a.appendChild( node )
			return a
		}

	    function lg(node) {
	    	var lg = document.createElement("lg")
	    	lg.appendChild(node)
	    	return lg
	    }

	    function trNtd() 
	    {
	    	var tr = document.createElement("tr")
	    	for (var i=0;i<arguments.length;i++) {
	    		var td = document.createElement("td")
	    		var strings = arguments[i].split("\n")
	    		for (var j=0; j<strings.length; j++) {
	    			var tn = document.createTextNode(strings[j])
		    		td.appendChild(tn)
	    			if (j!=strings.length-1)
	    			td.appendChild(document.createElement("br"))
	    		}
	    		tr.appendChild(td)
	    	}
	    	return tr
	    }

	    function li(txt)
	    {
			var li = document.createElement("li")
			var tn = document.createTextNode(txt)
			li.appendChild(tn)
			return li
	    }

	    // node constructors

    	this["companies-idx"] = function() {
    		node = elem("companies-idx")
    		var n = 0, i = 0;

    		var list = cv.experiences
	    	list.forEach(
	    		function(it) { n += it.companies.length }
	    	)

	    	list.forEach(
	    		function(it) {

			    	append( node, lg( txt( spcIf(i>0) + it.period ) ) )
			    	
			    	it.companies.forEach(
			    		function(it) {

			    			var id = n - i
			    			it.id = id
			    			i++

			    			append( node, bold( txt( " ‚óè\u00a0"+id+".\u00a0" ) ) )

		    				append( node, txt("\u00a0") )
			    			if (it.hasOwnProperty("link") && it.link!="") {
			    				append( node, lnk( it.link, txt(it.name) ) )
			    			} else {
			    				append( node, txt(it.name) )
			    			}
			    			if (it.prov)
		    					append( node, txt(" - " + it.prov + " ") )
			    		}
			    	)
		    	}
		    )
    	}

	    this["stacks-idx"] = function() {
    		node = elem("stacks-idx")
    		cv.experiences.forEach(
	    		function(it,i) {

			    	
	    			
	    			var id = String.fromCharCode( 65 + i )
	    			it.stackId = id
	    			var text = " ‚óè\u00a0"+id+" "

	    			/*
	    			// without helpers
			    	var lg = document.createElement("lg")
			    	if (i>0) lg.appendChild(document.createTextNode(" "))
	    			var tn = document.createTextNode(text)
	    			var b = document.createElement("b")
	    			b.appendChild(tn)
	    			lg.appendChild(b)
			    	node.appendChild(lg)
			    	*/

			    	// node.appendChild( lg ( txt(spcIf(i>0)) ).appendChild( bold( text ) ).parentElement )

			    	append( node, append( lg ( txt(spcIf(i>0)) ), bold( text ) ))

	    			append( node, txt( " " + it.stack + " " ) )
		    	}
		    )
	    } // stacks-idx

	    this["competencies-idx"] = function(node) {
    		node = document.getElementById("competencies-idx")
    		cv.competencies.forEach(
	    		function(it,i) {

			    	var id = it[0].toLowerCase()
			    	var dsc = it[1]

			    	var span = document.createElement("span")
			    	var img = document.createElement("img")
	    			img.src = "images/icons/" + it[0].toLowerCase() + ".png"
	    			span.appendChild(img)

	    			tn = document.createTextNode(" " + dsc + " ")
	    			span.appendChild(tn)

	    			node.appendChild(span)

		    	}
		    )
	    } // competencies-idx

	    this["projects"] = function(node) {
	    	node = document.getElementById("projects")
	    	var tbody = document.createElement("tbody")
			var prevComps = ""
	    	cv.experiences.forEach(
	    		function(exp) {
	    			exp.companies.forEach(
	    				function(comp) {
	    					comp.projects.forEach(
	    						function(prj) {

	    							var name = prj.hasOwnProperty("name") ? prj.name : ""
	    							var desc = prj.hasOwnProperty("desc") ? prj.desc : ""
	    							var link = prj.hasOwnProperty("link") ? prj.link : ""

					    			var tr = document.createElement("tr")

	    							// project
			    					var td = document.createElement("td")
			    					var dsc

			    					if (link !== "") {
			    						var alink

			    						if (name !== "") {
			    							alink = name
			    							dsc = "[" + alink + "]: " + desc
			    						} else {
			    							alink = desc
			    							dsc = "[" + alink +"]"
										}
			    						cv.links.push( [ alink, link ] )
			    					} else {
			    						dsc = name ? name+": "+desc : desc
			    					}

			    					var tn = document.createTextNode(dsc)
			    					td.appendChild(tn)
			    					tr.appendChild(td)

			    					// stack
			    					td = document.createElement("td")
			    					tn = document.createTextNode(exp.stackId)
			    					td.appendChild(tn)
			    					tr.appendChild(td)

			    					// competencies
			    					td = document.createElement("td")

			    					var comps = exp.competencies.join(",")
			    					if (prevComps == comps) 
		    							td.appendChild(document.createTextNode("\""))
			    					else {
				    					exp.competencies.forEach(
				    						function(it) {
				    							var span = document.createElement("span") 
				    							span.title = competence_dsc(it)
				    							span.className = "tip" 
				    							var img = document.createElement("img")
				    							img.src = "images/icons/" + it.toLowerCase() + ".png"
				    							span.appendChild(img)
				    							td.appendChild(span)
				    						}
				    					)
				    					prevComps = comps
				    				}

			    					/*
			    					tn = document.createTextNode(exp.competencies.join(", "))
			    					td.appendChild(tn)
			    					*/
			    					tr.appendChild(td)

			    					// company
			    					td = document.createElement("td")
			    					tn = document.createTextNode(comp.id)
			    					td.appendChild(tn)
			    					tr.appendChild(td)
	    							tbody.appendChild(tr)
			    				}
			    			)
	    				}
	    			)
	    		}
	    	)
	    	node.appendChild(tbody)
	    }

		function isIE() {
			var div = document.createElement("div")
			div.innerHTML = "<!--[if IE]><i></i><![endif]-->"
			var b = (div.getElementsByTagName("i").length == 1)
			if (b) return b
			if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > 0) {
	   			return true // MSIE
			}
			return false
		}

	    // -------------------------------------------------------------------

	    if (isIE()) alert("Segui l'esempio dei loro creatori, abbandona anche tu IE per un altro browser.")

	    parent = document.getElementById("self-nomination")
	    parent.innerHTML = cv["self-nomination"].replace(/\n/g,"<br>")

	    parent = document.querySelector("#briefly ul")
	    cv.briefly.lines.forEach(
	    	function(it) {
	    		if (cv.hidden.indexOf(it) == -1)
					parent.appendChild(li(it))
			}
		)

	    parent = document.getElementById("lasts-kb")
	    tbody = document.createElement("tbody")
		parent.appendChild(tbody)
	    cv["lasts-kb"].lines.forEach(
	    	function(it) {
				tbody.appendChild(trNtd(it[0], it[1]+''))
			}
		)

	    parent = document.querySelector("#previous-kb table")
	    tbody = document.createElement("tbody")
	    parent.appendChild(tbody)
	    cv["previous-kb"].items.forEach(
	    	function(it) {
				parent.appendChild(trNtd(it[0],it[1],it[2]+''))
			}
		)

	    // render("experiences", function(it) {...})
	    parent = document.querySelector("#experiences table")
	    tbody = document.createElement("tbody")
	    parent.appendChild(tbody)
	    cv.experiences.forEach(
	    	function(it) {
	    		var company = ""
	    		it.companies.forEach(
	    			function (c) {
	    				var name = c.name
	    				if (c.hasOwnProperty("link") && c.link!="") 
	    					name = "["+name+"]"
	    				company += name + " (" + c.prov + ")\n"
	    			}
	    		)
	    		var tr = trNtd(it.period+"\n"+it.comp, it.task, company)
				tbody.appendChild(tr)
			}
		)

	    parent = document.querySelector("#extra-info table")
	    tbody = document.createElement("tbody")
	    parent.appendChild(tbody)
	    cv["extra-info"].items.forEach( 
	    	function(it) {
	    		tbody.appendChild(trNtd( it[0], it[1] ))
	    	}
	    )

	    parent = document.getElementById("extra-courses")
	    tbody = document.createElement("tbody")
	    parent.appendChild(tbody)
	    cv["extra-courses"].items.forEach( 
	    	function(it) {
	    		tbody.appendChild(trNtd( "* " + it[0], it[1] ))
	    	}
	    )


	    /*****************************
	     *  render view by projects  *
	     *****************************/

	    this["companies-idx"]()
	    this["stacks-idx"]()
	    this["competencies-idx"]()
	    this["projects"]()


	    /*********************
	     *  replace [links]  *
	     *********************/
	     
	    var html = document.body.innerHTML

	    cv.anonymouse.forEach(
	    	function(it) {
		        var span = '<span class="anonymouse">' + it + '</span>'
		        html = html.replaceAll( it, span )
		    }
		)

	    cv.anonymouse.forEach(
	    	function(it) {
		        var span = '<span class="anonymouse">' + it + '</span>'
		        html = html.replaceAll( it, span )
		    }
		)

		function collect_links(obj, collection) {
			if (collection === undefined) collection=[]
			for (var k in obj) {
				if (k === "links")
					// obj[k].forEach( function (it) {collection.push.apply(it)} )
					collection.push.apply(collection,obj.links)
				if (typeof obj[k] === "object")
					collect_links(obj[k], collection)
			}
			return collection
		}

		var links = cv.links
		links.push.apply(links, collect_links(cv))

		// add links from companies
		cv.experiences.forEach( 
			function(it) {
				it.companies.forEach( 
					function(c) {
						links.push([c.name,c.link])
					}
				)
			}
		)


		// replace [link] with aref

	    links.forEach(
	    	function(it) {
		        var a = '<a href="' + it[1]+'">' + it[0] + '</a>'
		        var r = "["+it[0].replace("&","&amp;")+"]"
		        html = html.replaceAll( r, a )
		    }
		)
	    
	    document.body.innerHTML = html

	    // replaces templates
	    var templates = document.getElementsByTagName("template")
	    for(var i=0;i<templates.length;i++) {
	    	var tpl = templates[i]
    		var style = tpl.content.querySelector("style")
    		var css = document.createElement("style")
    		css.innerText = style.innerText
    		document.head.appendChild(css)
    		
    		// search tags an replace content
    		var name = tpl.attributes.name.value
    		var tags = document.getElementsByTagName(name)
    		for (var j=0;j<tags.length;j++) {
	    		tag = tags[j]
	    		var clone = tpl.content.querySelector("div").cloneNode(true)
	    		clone.id = name + (j===0?"":j)
				tag.replaceWith(clone)
			}	
	    }

	    // add events
	    var activeElems = document.querySelectorAll("*[click]")
	    activeElems.forEach(
	    	function(it) {
	    		var listener = eval(it.attributes.click.value)
	    		it.addEventListener("click",listener)
	    	}
	    )

	    // manage "commandline options"

	    var cmds = location.search.substring(1).split("&")
	    
	    if (cmds.indexOf("anonymouse")>-1) {
	    	// convert links to text
	        var l = document.getElementsByTagName("a")
	        while (l.length > 0) {
	            for (var i = 0; i < l.length; i++) {
	                var mySpan = document.createElement("span")
	                mySpan.innerText = l[i].innerText
	                l[i].replaceWith(mySpan)
	            }
	            l = document.getElementsByTagName("a")
	        }
	        var css = document.createElement("STYLE")
	        css.innerText = ".anonymouse{display:none;}"
	        document.head.append(css)
	    }


	    // show body and run

	    document.body.className='fade-in';
		
	    if (cmds.indexOf("print") > -1) {
			flip()
		} else if (cmds.indexOf("projects") == -1) {
			setTimeout( flip, 1050)
			message(
				"Cliccare/toccare sulla fotografia per cambiare vista da elenco progetti a esperienze"+
				"\n\n"+
				"Cliccare/toccare sull'email per copiarla nella clipboard"+
				"\n\n"+
				"Cliccare/toccare questo messaggio per chiuderlo"
			)
		}

	})() // end&run of app
    
</script>
</html>
